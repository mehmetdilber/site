#!/usr/bin/env php
<?php
/* (c) Anton Medvedev <anton@medv.io>
 *
 * For the full copyright and license information, please view the LICENSE
 * file that was distributed with this source code.
 */

require __DIR__ . '/../vendor/autoload.php';

define('ROOT', realpath(__DIR__ . '/..'));
$opt = getopt('v::');

$version = 'dev-master';
if (array_key_exists('v', $opt)) {
    $version = $opt['v'];
    if (!preg_match('/^\d+\.\d+\.\d+(-[\d\w\.]+)?$/i', $version)) {
        die("Version number must follow semantic versioning.\n");
    }
}

chdir(ROOT);
exec('composer install --no-dev');

$pharName = "deployer.phar";
$pharFile = ROOT . '/' . $pharName;

if (file_exists($pharFile)) {
    unlink($pharFile);
}

$phar = new \Phar($pharFile, 0, $pharName);
$phar->setSignatureAlgorithm(\Phar::SHA1);

$phar->startBuffering();

$finder = new Symfony\Component\Finder\Finder();
$finder->files()
    ->ignoreVCS(true)
    ->name('*.php')
    ->name('*.json')
    ->name('*.exe')
    ->exclude('phpunit')
    ->exclude('Tests')
    ->exclude('test')
    ->exclude('tests')
    ->exclude('phpspec')
    ->in(ROOT);

foreach ($finder as $fileInfo) {
    $file = str_replace(ROOT, '', $fileInfo->getRealPath());

    echo "Add file: " . $file . "\n";

    $phar->addFile($fileInfo->getRealPath(), $file);
}

// Add bin/dep file
$depContent = file_get_contents(ROOT . '/bin/dep');
$depContent = str_replace("#!/usr/bin/env php\n", '', $depContent);
$depContent = str_replace("'master'", "'$version'", $depContent);
$depContent = str_replace('__FILE__', 'str_replace("phar://", "", Phar::running())', $depContent);
$phar->addFromString('bin/dep', $depContent);

$stub = <<<STUB
#!/usr/bin/env php
<?php
Phar::mapPhar('{$pharName}');
require 'phar://{$pharName}/bin/dep';
__HALT_COMPILER();
STUB;

$phar->setStub($stub);
// Bug #53467. Phar cannot compress large archives. https://bugs.php.net/bug.php?id=53467
// $phar->compressFiles(Phar::GZ);
$phar->stopBuffering();
unset($phar);

echo "$pharName was created successfully.\n";
